spring.application.name=backend

# PostgreSQL Database Configuration
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/rentreturn}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:arushr}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:arushr}
spring.datasource.driver-class-name=org.postgresql.Driver

# For production (Supabase), set these env vars:
# SPRING_DATASOURCE_URL=jdbc:postgresql://db.sjvogwqdassicafmpxhc.supabase.co:5432/postgres
# SPRING_DATASOURCE_USERNAME=postgres
# SPRING_DATASOURCE_PASSWORD=YOUR_SUPABASE_PASSWORD

# JPA/Hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Server configuration
server.port=8080

# SSL configuration (commented out for development)
#server.port=8443
#server.ssl.key-store=classpath:keystore.p12
#server.ssl.key-store-password=rentreturn
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=rentreturn

# Disable SSL completely
server.ssl.enabled=false

server.error.include-message=always
server.error.include-stacktrace=always

spring.jpa.properties.hibernate.jdbc.time_zone=UTC


# Logging level
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework=DEBUG
logging.level.com.arushr=DEBUG


# Connection Pooling (HikariCP - already included with Spring Boot)
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=5

# JWT configuration
# For production, set JWT_SECRET and JWT_EXPIRATION as environment variables
# Example:
# export JWT_SECRET=your_jwt_secret_here
# export JWT_EXPIRATION=86400000
jwt.secret=4ada66507739000da7f9f2b0e5e96cde2ed9de6697b8d6dc36ea5b8bf7306597
jwt.expiration=86400000
# 1 day in milliseconds

logging.level.org.springframework.core.env=DEBUG

# Recommended: Create a separate application-test.properties for test DB config
# See application-test.properties for test-specific settings

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# For dev/testing: Uncomment to randomize JWT secret on each restart (forces logout)
# jwt.secret=${random.value}

# Stripe API Secret Key
stripe.secret.key=${STRIPE_SECRET_KEY:sk_test_your_default_key}

# Email SMTP configuration
spring.mail.host=${MAIL_HOST:smtp.example.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your_username}
spring.mail.password=${MAIL_PASSWORD:your_password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.from=${MAIL_FROM:no-reply@rentreturn.com}


